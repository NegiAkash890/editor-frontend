{"version":3,"sources":["components/SplashScreen/index.module.css","components/ThemeToggler/index.module.css","components/Popup/index.module.css","components/Prompt/index.module.css","components/Footer.js","context/reducers/BoilerplateReducer.js","context/Providers/BoilerplateProvider.js","context/reducers/ThemeReducer.js","context/Providers/Themeprovider.js","utils/downloadFile.js","utils/controlledEditorConfig.js","icons/Reset.jsx","components/Prompt/index.js","icons/Upload.jsx","icons/Play.jsx","icons/Download.jsx","icons/Copy.jsx","components/LeftContainer.js","components/RightContainer.js","components/SelectBar.js","components/Main.js","icons/Info.jsx","components/Popup/index.js","components/ThemeToggler/index.js","components/NavBar.js","components/SplashScreen/index.js","App.js","index.js"],"names":["module","exports","Footer","_jsx","className","cppBoilerCode","BoilerplateReducer","prevCode","_ref","type","BoilerPlateContext","createContext","BoilerplateProvider","children","boilerplateCode","setBoilerplateCode","useReducer","boilerplateContextValue","useMemo","useEffect","Provider","value","useBoilerplate","useContext","ThemeReducer","prevTheme","payload","theme","ThemeContext","ThemeProvider","themePreference","setThemePreference","themeContentValue","setTheme","currentActiveTheme","localStorage","getItem","setItem","useTheme","downloadFile","content","fileName","extension","arguments","length","undefined","element","document","createElement","file","Blob","href","URL","createObjectURL","downloadAs","concat","download","body","appendChild","click","themeConfig","light","dark","defaultConfig","mode","cb","lineWrapping","lint","lineNumbers","extraKeys","event","smartIndent","indentWithTabs","tabSize","indentUnit","autoCloseBrackets","Reset","props","height","viewBox","width","xmlns","_jsxs","fill","fillRule","stroke","strokeLinecap","strokeLinejoin","transform","d","baseCSSStyles","background","border","ResetPrompt","handleResetCode","Popup","contentStyle","trigger","closeOnEscape","modal","close","styles","onClick","heading","actions","Upload","strokeWidth","points","x1","x2","y1","y2","Play","Download","id","Copy","x","y","LeftContainer","pre","ext","updateOutput","updateLoading","_copied","setCopied","useState","code","setCode","defaultTextAreaInput","setInput","fileinput","setFileInput","setMode","hiddenFileInput","useRef","setTimeout","cachedUserCode","setLanguageMode","newMode","prevMode","axios","get","then","_","console","log","catch","error","handleSubmit","e","preventDefault","data","language","input","post","res","result","stderr","stdout","err","config","handleClick","current","onChange","reader","FileReader","onload","ev","text","target","readAsText","files","style","display","ref","removeItem","downloadTxtFile","CopyToClipboard","onCopy","copyToClipBoard","currentState","ControlledEditor","onBeforeChange","handleControlledBeforeChangeCallBack","__","options","placeholder","spellCheck","default","RightContainer","output","loading","title","alt","src","process","Loader","color","visible","SelectBar","changeLanguage","lang","setLang","setAttribute","Main","setOutput","setError","setLoading","status","updateError","Info","enableBackground","xmlSpace","xmlnsXlink","PopUpText","accentColor","header","ThemeIcon","FiSun","size","FiMoon","ThemeToggler","toggleTheme","NavBar","backgroundColor","PopupText","Preloader","preload","logo","PropagateLoader","App","isLoading","setIsLoading","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ca0e51e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preload\":\"SplashScreen_preload__3kenw\",\"logo\":\"SplashScreen_logo__VBPct\",\"preload_logo\":\"SplashScreen_preload_logo__28Etk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggler-btn\":\"ThemeToggler_toggler-btn__23v5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Popup_modal__339YA\",\"close\":\"Popup_close__BbVSI\",\"heading\":\"Popup_heading__3UFkc\",\"header\":\"Popup_header__3IsH8\",\"content\":\"Popup_content__335XA\",\"actions\":\"Popup_actions__19kPl\",\"popup-content\":\"Popup_popup-content__12HRy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Prompt_modal__2wEI_\",\"close\":\"Prompt_close__1YKmG\",\"heading\":\"Prompt_heading__3eimX\",\"header\":\"Prompt_header__2M7GH\",\"content\":\"Prompt_content__5UcjS\",\"actions\":\"Prompt_actions__15nL-\",\"popup-content\":\"Prompt_popup-content__3pd5I\"};","import React from 'react';\n\nconst Footer = () => <div className=\"footer\" />;\n\nexport default Footer;\n","const cppBoilerCode = `#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    //Input the code here\n    return 0;\n}`;\n\nconst javaBoilerCode = `import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n/* Name of the class has to be \"Main\" only if the class is public. */\nclass Main\n{\n    public static void main (String[] args) throws java.lang.Exception\n    {\n        // Input the code here\n    }\n}`;\n\n// eslint-disable-next-line quotes\nconst pythonBoilerCode = `# Python code Here \\n\nprint('Hello world')`;\n\nconst javascriptBoilerCode = `// Javascript code Here \\n\nconsole.log('Hello world')`;\n\nconst BoilerplateReducer = (prevCode, { type }) => {\n  switch (type) {\n    case 'CPP':\n      return cppBoilerCode;\n    case 'PYTHON':\n      return pythonBoilerCode;\n    case 'JAVA':\n      return javaBoilerCode;\n    case 'JAVASCRIPT':\n      return javascriptBoilerCode;\n    default:\n      return cppBoilerCode;\n  }\n};\n\nexport default BoilerplateReducer;\n","import {\n  React, createContext, useContext, useReducer, useEffect, useMemo,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport BoilerplateReducer from '../reducers/BoilerplateReducer';\n\nconst BoilerPlateContext = createContext();\n\nexport const BoilerplateProvider = ({ children }) => {\n  const [boilerplateCode, setBoilerplateCode] = useReducer(BoilerplateReducer, '');\n  const boilerplateContextValue = useMemo(() => ({\n    boilerplateCode, setBoilerplateCode,\n  }));\n\n  useEffect(() => {\n    setBoilerplateCode({ type: 'CPP' });\n  }, []);\n\n  return (\n    <BoilerPlateContext.Provider\n      value={boilerplateContextValue}\n    >\n      {children}\n    </BoilerPlateContext.Provider>\n  );\n};\n\nBoilerplateProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport const useBoilerplate = () => useContext(BoilerPlateContext);\n","const ThemeReducer = (prevTheme, { type, payload }) => {\n  switch (type) {\n    case 'TOGGLE_THEME':\n      if (payload) {\n        return payload.theme;\n      }\n      return prevTheme === 'light' ? 'dark' : 'light';\n\n    default:\n      return prevTheme;\n  }\n};\nexport default ThemeReducer;\n","import React, {\n  createContext, useContext, useEffect, useMemo, useReducer,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport ThemeReducer from '../reducers/ThemeReducer';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [themePreference, setThemePreference] = useReducer(ThemeReducer, 'light');\n  const themeContentValue = useMemo(() => ({\n    theme: themePreference, setTheme: setThemePreference,\n  }));\n\n  useEffect(() => {\n    const currentActiveTheme = localStorage.getItem('theme');\n    if (currentActiveTheme) {\n      setThemePreference({ type: 'TOGGLE_THEME', payload: { theme: currentActiveTheme } });\n    }\n  }, []);\n\n  useEffect(() => localStorage.setItem('theme', themePreference), [themePreference]);\n\n  return (\n    <ThemeContext.Provider value={themeContentValue}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport const useTheme = () => useContext(ThemeContext);\n","const downloadFile = (content, fileName, extension = 'txt') => {\n  const element = document.createElement('a');\n  const file = new Blob([content], {\n    type: 'text/plain',\n  });\n  element.href = URL.createObjectURL(file);\n  const downloadAs = `${fileName}.${extension}`;\n  element.download = downloadAs;\n  document.body.appendChild(element);\n  element.click();\n};\n\nexport default downloadFile;\n","const themeConfig = {\n  light: 'eclipse',\n  dark: 'dracula',\n};\n\nconst defaultConfig = (mode, themePreference, cb) => ({\n  lineWrapping: true,\n  lint: true,\n  mode,\n  theme: themeConfig[themePreference],\n  lineNumbers: true,\n  extraKeys: {\n    'Ctrl-Space': (event) => {\n      cb(event);\n    },\n  },\n  smartIndent: true,\n  indentWithTabs: true,\n  tabSize: 2,\n  indentUnit: 4,\n  autoCloseBrackets: true,\n});\n\nexport default defaultConfig;\n","import * as React from 'react';\n\nconst Reset = (props) => (\n  <svg\n    height={21}\n    viewBox=\"0 0 21 21\"\n    width={21}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <g\n      fill=\"none\"\n      fillRule=\"evenodd\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      transform=\"translate(2 2)\"\n    >\n      <path d=\"m12.5 1.5c2.4138473 1.37729434 4 4.02194088 4 7 0 4.418278-3.581722 8-8 8s-8-3.581722-8-8 3.581722-8 8-8\" />\n      <path d=\"m12.5 5.5v-4h4\" />\n    </g>\n  </svg>\n);\nexport default Reset;\n","import React from 'react';\nimport Popup from 'reactjs-popup';\nimport PropTypes from 'prop-types';\nimport styles from './index.module.css';\nimport Reset from '../../icons/Reset';\n\nconst baseCSSStyles = {\n  background: \"none\",\n  border: \"none\",\n}\n\nconst ResetPrompt = ({ handleResetCode }) => (\n  <Popup\n  contentStyle={{...baseCSSStyles}}\n  trigger={\n    (\n      <button className=\"btn_wt_icon\" type=\"button\">\n        <Reset width={16} height={16}/>\n        <label className='btn_label'>Reset</label>\n      </button>\n    )\n    }\n    closeOnEscape\n    modal\n  >\n    {(close) => (\n      <div className={styles.modal}>\n        <button className={styles.close} onClick={close} type=\"button\">\n          &times;\n        </button>\n        <div className={styles.heading}> Reset Code </div>\n        <div className={styles.content}>\n          Are you sure you want to reset the current code? Your current written code will be lost.\n        </div>\n        <div>\n          <button\n            className={styles.actions}\n            type=\"button\"\n            onClick={() => {\n              handleResetCode();\n              close();\n            }}\n          >\n            Yes\n          </button>\n        </div>\n      </div>\n    )}\n  </Popup>\n);\nResetPrompt.propTypes = {\n  handleResetCode: PropTypes.func.isRequired,\n};\nexport default ResetPrompt;\n","import * as React from 'react';\n\nconst Upload = (props) => (\n  <svg\n    className=\"feather feather-upload\"\n    fill=\"none\"\n    height={24}\n    stroke=\"currentColor\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    strokeWidth={2}\n    viewBox=\"0 0 24 24\"\n    width={24}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\" />\n    <polyline points=\"17 8 12 3 7 8\" />\n    <line x1={12} x2={12} y1={3} y2={15} />\n  </svg>\n);\nexport default Upload;\n","import * as React from \"react\";\nconst Play = (props) => (\n  <svg\n    height={24}\n    viewBox=\"0 0 24 24\"\n    width={24}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M5,21 L5,3 C5,2.20883421 5.87524596,1.73099262 6.54075759,2.15882152 L20.5407576,11.1588215 C21.1530808,11.5524579 21.1530808,12.4475421 20.5407576,12.8411785 L6.54075759,21.8411785 C5.87524596,22.2690074 5,21.7911658 5,21 Z M7,19.1683345 L18.1507426,12 L7,4.8316655 L7,19.1683345 Z\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default Play;\n","import * as React from \"react\";\nconst Download = (props) => (\n  <svg\n    data-name=\"Livello 1\"\n    id=\"Livello_1\"\n    viewBox=\"0 0 128 128\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <title />\n    <path d=\"M61.88,93.12h0a3,3,0,0,0,.44.36l.24.13a1.74,1.74,0,0,0,.59.24l.25.07h0a3,3,0,0,0,1.16,0l.26-.08.3-.09a3,3,0,0,0,.3-.16l.21-.12a3,3,0,0,0,.46-.38L93,66.21A3,3,0,1,0,88.79,62L67,83.76V3a3,3,0,0,0-6,0V83.76L39.21,62A3,3,0,0,0,35,66.21Z\" />\n    <path d=\"M125,88a3,3,0,0,0-3,3v22a9,9,0,0,1-9,9H15a9,9,0,0,1-9-9V91a3,3,0,0,0-6,0v22a15,15,0,0,0,15,15h98a15,15,0,0,0,15-15V91A3,3,0,0,0,125,88Z\" />\n  </svg>\n);\nexport default Download;\n","import * as React from \"react\";\nconst Copy = (props) => (\n  <svg viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <rect fill=\"none\" height={256} width={256} />\n    <polyline\n      fill=\"none\"\n      points=\"216 184 216 40 72 40\"\n      stroke=\"white\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={16}\n    />\n    <rect\n      fill=\"none\"\n      height={144}\n      stroke=\"white\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={16}\n      width={144}\n      x={40}\n      y={72}\n    />\n  </svg>\n);\nexport default Copy;\n","/* eslint-disable no-console */\n/* eslint no-unused-vars: 0 */\nimport axios from 'axios';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport PropTypes from 'prop-types';\nimport { Controlled as ControlledEditor } from 'react-codemirror2-react-17';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/eclipse.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/mode/clike/clike';\nimport 'codemirror/mode/python/python';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/addon/edit/closebrackets';\nimport { useTheme } from '../context/Providers/Themeprovider';\nimport downloadFile from '../utils/downloadFile';\nimport defaultConfig from '../utils/controlledEditorConfig';\nimport { useBoilerplate } from '../context/Providers/BoilerplateProvider';\nimport ResetPrompt from './Prompt';\nimport Upload from '../icons/Upload';\nimport Play from '../icons/Play';\nimport Download from '../icons/Download';\nimport Copy from '../icons/Copy';\n\nconst LeftContainer = ({\n  pre, ext, updateOutput, updateLoading,\n}) => {\n  const [_copied, setCopied] = useState(false);\n  const [code, setCode] = useState(pre);\n  const [defaultTextAreaInput, setInput] = useState(null);\n  const [fileinput, setFileInput] = useState();\n  const [mode, setMode] = useState(ext);\n  const hiddenFileInput = useRef(null);\n  const { theme } = useTheme();\n  const { boilerplateCode } = useBoilerplate();\n\n  useEffect(() => {\n    setTimeout(() => {\n      setCode(pre);\n    }, 0.5);\n  }, [pre]);\n\n  useEffect(() => {\n    const cachedUserCode = localStorage.getItem(mode);\n    if (cachedUserCode) {\n      setCode(cachedUserCode);\n    }\n  }, [mode]);\n\n  // set the language mode as per the file extension\n  const setLanguageMode = () => {\n    let newMode = '';\n    switch (ext) {\n      case 'cpp':\n        newMode = 'text/x-c++src';\n        break;\n      case 'java':\n        newMode = 'text/x-java';\n        break;\n      case 'py':\n        newMode = 'text/x-python';\n        break;\n      case 'js':\n        newMode = 'text/javascript';\n        break;\n      default:\n    }\n    setMode((prevMode) => {\n      localStorage.setItem(prevMode, code);\n      return newMode;\n    });\n  };\n\n  useEffect(() => {\n    setLanguageMode();\n  }, [ext]);\n\n  useEffect(() => {\n    axios\n      .get('https://main--editor-backend-compile.netlify.app/.netlify/functions/api')\n      .then((_) => console.log('Ping'))\n      .catch((error) => console.error('Error:', error));\n  }, []);\n\n  const showFile = (e) => {\n    e.preventDefault();\n    const reader = new FileReader();\n    reader.onload = (ev) => {\n      const text = ev.target.result;\n      setFileInput(text);\n    };\n    reader.readAsText(e.target.files[0]);\n  };\n\n  useEffect(() => {\n    setCode(fileinput);\n  }, [fileinput]);\n\n  const handleClick = () => {\n    hiddenFileInput.current.click();\n  };\n\n  const downloadTxtFile = () => downloadFile(code, 'myCode', ext);\n\n  const handleControlledBeforeChangeCallBack = (_, __, value) => {\n    setCode(value);\n  };\n\n  const handleTextAreaChange = (e) => setInput(e.target.value);\n\n  const handleResetCode = () => {\n    localStorage.removeItem(mode);\n    setCode(boilerplateCode);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    updateLoading('true');\n    const data = {\n      language: ext,\n      code,\n      input: defaultTextAreaInput,\n    };\n\n    axios\n      .post('https://main--editor-backend-compile.netlify.app/.netlify/functions/api/compile', data)\n      .then((res) => {\n        updateLoading('false');\n        if (res.data.result.stderr) {\n          return updateOutput(res.data.result.stderr, 'error');\n        }\n        return updateOutput(res.data.result.stdout, 'response');\n      })\n      .catch((err) => {\n        updateOutput(err, 'error');\n      });\n  };\n\n  const config = defaultConfig(mode, theme, handleSubmit);\n  const copyToClipBoard = () => {\n    setCopied(true);\n    setTimeout(() => {\n      setCopied((currentState) => !currentState);\n    }, 1000);\n  };\n  return (\n    <div className=\"left__container\">\n      <div className=\"header__info\">\n        <div className=\"file__name\">\n          <span>\n            code.\n            {ext}\n          </span>\n        </div>\n        <div className=\"d-flex\">\n          <button className=\"btn_wt_icon\" type=\"button\" onClick={handleClick}>\n            <Upload width={16} height={16} />\n            <label className=\"btn_label\">Upload</label>\n          </button>\n          <input\n            type=\"file\"\n            onChange={showFile}\n            style={{ display: 'none' }}\n            ref={hiddenFileInput}\n          />\n          <button className=\"btn_wt_icon\" type=\"button\" onClick={handleSubmit}>\n            <Play width={16} height={16} fill=\"white\" />\n            <label className=\"btn_label\">Run</label>\n          </button>\n        </div>\n      </div>\n      <div\n        className={`code__body ${theme === 'light' ? 'code__body_light-mode' : ''\n        }`}\n      >\n        <div className=\"logger__head_left\">\n          <h3 className=\"logger__heading\">Editor</h3>\n          <div className=\"tooltipBoundary\">\n            <ResetPrompt handleResetCode={handleResetCode} />\n            <button className=\"btn_wt_icon\" type=\"button\" onClick={downloadTxtFile}>\n              <Download width={16} height={16} fill=\"white\" />\n              <label className=\"btn_label\">Download</label>\n            </button>\n\n            <CopyToClipboard text={code} onCopy={copyToClipBoard}>\n              <button className=\"btn_wt_icon\" type=\"button\">\n                <Copy width={16} height={16} fill=\"white\" />\n                <label className=\"btn_label\">{_copied ? 'Copied' : 'Copy'}</label>\n              </button>\n            </CopyToClipboard>\n          </div>\n        </div>\n        <form>\n          <ControlledEditor\n            onBeforeChange={handleControlledBeforeChangeCallBack}\n            value={code}\n            className=\"code-mirror-wrapper\"\n            options={config}\n          />\n          <textarea\n            placeholder=\"Input the Data Here\"\n            spellCheck=\"false\"\n            onChange={handleTextAreaChange}\n            className={`input__block ${theme === 'light' ? 'input__block_light-mode' : ''\n            }`}\n            default={defaultTextAreaInput}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\nLeftContainer.propTypes = {\n  pre: PropTypes.string.isRequired,\n  ext: PropTypes.string.isRequired,\n  updateOutput: PropTypes.func.isRequired,\n  updateLoading: PropTypes.func.isRequired,\n};\nexport default LeftContainer;\n","/* eslint no-unused-vars: 0 */\nimport React from 'react';\nimport Loader from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '../context/Providers/Themeprovider';\n\nconst RightContainer = ({\n  output, loading, updateOutput,\n}) => {\n  const { theme } = useTheme();\n\n  return (\n    <div className=\"right__container\">\n      <div className=\"header__info\">\n        <div className=\"file__name\">\n          <span>Output Terminal</span>\n        </div>\n        <div>\n          {output && (\n            <button\n              className=\"btn\"\n              type=\"button\"\n              onClick={() => updateOutput('Console Cleared', 'clear')}\n            >\n              <img\n                title=\"Clear Terminal\"\n                alt=\"Clear Terminal\"\n                src={`${process.env.PUBLIC_URL}/assets/clear-icon.png`}\n              />\n            </button>\n          )}\n        </div>\n      </div>\n      <div\n        className={`logger__head_right ${\n          theme === 'light' ? 'logger__head_right_light-mode' : ''\n        }`}\n      >\n        <div\n          className={`output ${theme === 'light' ? 'output_light-mode' : ''}`}\n        >\n          <pre>\n            {output}\n          </pre>\n        </div>\n        <Loader\n          className=\"loader\"\n          width=\"100\"\n          height=\"100\"\n          type=\"Rings\"\n          color=\"blueviolet\"\n          visible={loading}\n        />\n      </div>\n    </div>\n  );\n};\n\nRightContainer.propTypes = {\n  output: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  updateOutput: PropTypes.func.isRequired,\n};\n\nexport default RightContainer;\n","import React, { useState } from 'react';\nimport './Main.css';\nimport PropTypes from 'prop-types';\nimport { useBoilerplate } from '../context/Providers/BoilerplateProvider';\n\nconst SelectBar = ({ changeLanguage }) => {\n  const [lang, setLang] = useState('cpp');\n  const { setBoilerplateCode } = useBoilerplate();\n\n  const handleClick = (e, value) => {\n    switch (value) {\n      case 'cpp':\n        e.target.setAttribute(\n          'src',\n          `${process.env.PUBLIC_URL}/assets/c-active.png`,\n        );\n        setLang('cpp');\n        break;\n      case 'java':\n        e.target.setAttribute(\n          'src',\n          `${process.env.PUBLIC_URL}/assets/java-active.png`,\n        );\n        setLang('java');\n        break;\n      case 'py':\n        e.target.setAttribute(\n          'src',\n          `${process.env.PUBLIC_URL}/assets/py-active.png`,\n        );\n        setLang('py');\n        break;\n      case 'js':\n        e.target.setAttribute(\n          'src',\n          `${process.env.PUBLIC_URL}/assets/js-active.png`,\n        );\n        setLang('js');\n        break;\n      default:\n    }\n    changeLanguage(value);\n  };\n  return (\n    <div className=\"select__bar\">\n      <img\n        src={\n          lang === 'cpp'\n            ? `${process.env.PUBLIC_URL}/assets/c-active.png`\n            : `${process.env.PUBLIC_URL}/assets/c-inactive.png`\n        }\n        alt=\"C++\"\n        width={60}\n        onClick={(e) => {\n          setBoilerplateCode({ type: 'CPP' });\n          handleClick(e, 'cpp');\n        }}\n      />\n      <img\n        src={\n          lang === 'java'\n            ? `${process.env.PUBLIC_URL}/assets/java-active.png`\n            : `${process.env.PUBLIC_URL}/assets/java-inactive.png`\n        }\n        alt=\"JS\"\n        width={60}\n        onClick={(e) => {\n          setBoilerplateCode({ type: 'JAVA' });\n          handleClick(e, 'java');\n        }}\n      />\n      <img\n        src={\n          lang === 'py'\n            ? `${process.env.PUBLIC_URL}/assets/py-active.png`\n            : `${process.env.PUBLIC_URL}/assets/py-inactive.png`\n        }\n        alt=\"Python\"\n        width={60}\n        onClick={(e) => {\n          setBoilerplateCode({ type: 'PYTHON' });\n          handleClick(e, 'py');\n        }}\n      />\n      <img\n        src={\n          lang === 'js'\n            ? `${process.env.PUBLIC_URL}/assets/js-active.png`\n            : `${process.env.PUBLIC_URL}/assets/js-inactive.png`\n        }\n        alt=\"Javascript\"\n        width={60}\n        onClick={(e) => {\n          setBoilerplateCode({ type: 'JAVASCRIPT' });\n          handleClick(e, 'js');\n        }}\n      />\n    </div>\n  );\n};\nSelectBar.propTypes = {\n  changeLanguage: PropTypes.func.isRequired,\n};\nexport default SelectBar;\n","import React, { useState } from 'react';\nimport { useBoilerplate } from '../context/Providers/BoilerplateProvider';\nimport { useTheme } from '../context/Providers/Themeprovider';\nimport LeftContainer from './LeftContainer';\nimport RightContainer from './RightContainer';\nimport SelectBar from './SelectBar';\nimport './Main.css';\n\nconst Main = () => {\n  const [output, setOutput] = useState('');\n  const [lang, setLang] = useState('cpp');\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { theme } = useTheme();\n  const { boilerplateCode } = useBoilerplate();\n\n  const updateOutput = (res, type) => {\n    if (type === 'clear') {\n      setOutput('Console Cleared');\n    } else if (type === 'error') {\n      setError(true);\n      setOutput(res);\n    } else {\n      setOutput(res);\n    }\n  };\n\n  const updateError = (value) => {\n    setError(value);\n  };\n  const updateLoading = (status) => {\n    setLoading(status);\n  };\n  const changeLanguage = (value) => {\n    setLang(value);\n  };\n\n  return (\n    <div\n      className={`main__container ${\n        theme === 'light' ? 'main__container_light-mode' : ''\n      }`}\n    >\n      <SelectBar changeLanguage={changeLanguage} />\n      <div className=\"content__area\">\n        <LeftContainer\n          ext={lang}\n          pre={boilerplateCode}\n          updateOutput={updateOutput}\n          updateLoading={updateLoading}\n          updateError={updateError}\n          loading={loading}\n        />\n        <RightContainer\n          output={output}\n          loading={loading}\n          updateOutput={updateOutput}\n          error={error}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import * as React from 'react';\n\nconst Info = (props) => (\n  <svg\n    enableBackground=\"new 0 0 50 50\"\n    height=\"50px\"\n    id=\"Layer_1\"\n    viewBox=\"0 0 50 50\"\n    width=\"50px\"\n    xmlSpace=\"preserve\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    {...props}\n  >\n    <rect fill=\"none\" height={50} width={50} />\n    <path d=\"M23.779,16.241c-0.216,0-0.357-0.144-0.357-0.359v-2.618c0-0.215,0.142-0.359,0.357-0.359h2.439  c0.215,0,0.359,0.144,0.359,0.359v2.618c0,0.215-0.145,0.359-0.359,0.359H23.779z M23.852,37.293c-0.215,0-0.358-0.143-0.358-0.358  V20.473c0-0.215,0.144-0.359,0.358-0.359h2.295c0.216,0,0.359,0.144,0.359,0.359v16.462c0,0.216-0.144,0.358-0.359,0.358H23.852z\" />\n  </svg>\n);\nexport default Info;\n","import React from 'react';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport styles from './index.module.css';\nimport Info from '../../icons/Info';\nimport { useTheme } from '../../context/Providers/Themeprovider';\n\nconst PopUpText = () => {\n  const { theme } = useTheme();\n  const accentColor = theme === \"dark\" ? \"white\" : \"black\";\n  return (\n    <Popup\n      trigger={\n        <Info width={30} height={30} stroke={accentColor} fill={accentColor} />\n      }\n      modal\n    >\n      {(close) => (\n        <div className={styles.modal}>\n          <div className={styles.header}>\n            <div className={styles.heading}>About Project</div>\n            <button className={styles.close} onClick={close} type=\"button\">\n              &times;\n            </button>\n          </div>\n          <div className={styles.content}>\n            {`\n            Welcome to Online Compiler\n            Currently, the Project supports for\n              Python\n              ,C++,\n              JavaScript\n              and\n              Java\n               This is an\n              open-source project\n              and contributions are appreciated. If interested or you have any\n              suggestion click the\n              GitHub\n              icon at the bottom and raise an\n              issue.\n            `}\n          </div>\n          <div>\n            <a className={styles.actions} href=\"https://github.com/NegiAkash890/editor-frontend\">\n              View on GitHub\n            </a>\n          </div>\n        </div>\n      )}\n    </Popup>)\n};\n\nexport default PopUpText;\n","import React from 'react';\nimport { FiSun, FiMoon } from 'react-icons/fi';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '../../context/Providers/Themeprovider';\nimport styles from './index.module.css';\n\nconst ThemeIcon = ({ theme }) => (theme === 'dark' ? <FiSun size={20} strokeWidth={2} stroke=\"white\" /> : <FiMoon strokeWidth={2} size={20} fill=\"black\" />);\n\nconst ThemeToggler = () => {\n  const { theme, setTheme } = useTheme();\n  const toggleTheme = () => setTheme({ type: 'TOGGLE_THEME' });\n  return (\n    <button\n      type=\"button\"\n      className={styles['toggler-btn']}\n      onClick={toggleTheme}\n    >\n      <ThemeIcon theme={theme} />\n    </button>\n  );\n};\n\nThemeIcon.propTypes = {\n  theme: PropTypes.string.isRequired,\n};\nexport default ThemeToggler;\n","/* eslint-disable */\nimport React from 'react';\nimport { useTheme } from '../context/Providers/Themeprovider';\nimport PopupText from './Popup/index';\nimport ThemeToggler from './ThemeToggler/index';\n\nconst NavBar = () => {\n  const { theme } = useTheme();\n  return (\n    <div className=\"top__nav dark__nav\" style={theme === 'dark' ? { backgroundColor: 'black', color: 'white' } : {}}>\n      <div className=\"logo__info\">\n        <img\n          src={`${process.env.PUBLIC_URL}/assets/main-logo.png`}\n          alt=\"site logo\"\n          width=\"50px\" style={theme === 'dark' ? { backgroundColor: 'white' } : {}}\n        />\n        <p id=\"logo__name\">Online Compiler <sup>v2</sup></p>\n      </div>\n      <div className=\"info__section\">\n        <PopupText />\n        <ThemeToggler />\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\nimport styles from './index.module.css';\n\nconst Preloader = () => (\n  <div className={styles.preload}>\n    <img\n      className={styles.logo}\n      src={`${process.env.PUBLIC_URL}/assets/main-logo.png`}\n      alt=\"Loading ...\"\n      height=\"150rem\"\n    />\n    <br />\n    <PropagateLoader size=\"20px\" />\n  </div>\n);\n\nexport default Preloader;\n","import React, { useState, useEffect } from 'react';\nimport Footer from './components/Footer';\nimport Main from './components/Main';\nimport NavBar from './components/NavBar';\nimport './App.css';\nimport Preloader from './components/SplashScreen';\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n  }, []);\n\n  return isLoading ? (\n    <Preloader />\n  ) : (\n    <div className=\"App\">\n      <NavBar />\n      <Main />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider } from './context/Providers/Themeprovider';\nimport { BoilerplateProvider } from './context/Providers/BoilerplateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <BoilerplateProvider>\n        <App />\n      </BoilerplateProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}