{"version":3,"sources":["components/Splash Screen/SplashScreen.module.css","components/ThemeToggler/Themetoggler.module.css","components/Footer.js","context/reducers/BoilerplateReducer.js","context/Providers/BoilerplateProvider.js","context/reducers/ThemeReducer.js","context/Providers/Themeprovider.js","components/LeftContainer.js","components/RightContainer.js","components/SelectBar.js","components/Main.js","components/Popup.js","components/ThemeToggler/ThemeToggler.js","components/NavBar.js","components/Splash Screen/SplashScreen.js","App.js","index.js"],"names":["module","exports","Footer","className","cppBoilerCode","BoilerplateReducer","prevCode","type","BoilerPlateContext","createContext","BoilerplateProvider","children","useReducer","boilerplateCode","setBoilerplateCode","useEffect","Provider","value","useBoilerplate","useContext","ThemeReducer","prevTheme","payload","theme","ThemeContext","ThemeProvider","setTheme","currTheme","localStorage","getItem","setItem","useTheme","LeftContainer","pre","ext","updateOutput","updateLoading","useState","setCopied","code","setCode","input","setInput","fileinput","setFileInput","mode","setMode","setTimeout","setLanguageMode","hiddenFileInput","useRef","handleSubmit","e","data","language","axios","post","then","res","result","output","search","catch","err","onClick","current","click","title","src","process","alt","width","onChange","preventDefault","reader","FileReader","onload","ev","a","text","target","readAsText","files","style","display","ref","element","document","createElement","file","Blob","href","URL","createObjectURL","fileName","concat","download","body","appendChild","trigger","backgroundColor","border","onCopy","position","closeOnDocumentClick","keepTooltipInside","onBeforeChange","editor","options","lineWrapping","lint","lineNumbers","extraKeys","event","placeholder","spellCheck","default","RightContainer","loading","error","height","color","visible","SelectBar","changeLanguage","lang","setLang","handleClick","setAttribute","Main","setOutput","setError","setLoading","status","updateError","PopUpText","modal","nested","close","ThemeToggler","togglerStyles","size","NavBar","id","Preloader","preload","logo","App","isLoading","setIsLoading","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1b2be9fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preload\":\"SplashScreen_preload__1wikW\",\"logo\":\"SplashScreen_logo__vPQHG\",\"preload_logo\":\"SplashScreen_preload_logo__MySF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggler-btn\":\"Themetoggler_toggler-btn__2CnAA\"};","import React from 'react';\n\nconst Footer = () => <div className=\"footer\" />;\n\nexport default Footer;\n","const cppBoilerCode = `#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    //Input the code here\n    return 0;\n}`;\n\nconst javaBoilerCode = `import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n/* Name of the class has to be \"Main\" only if the class is public. */\nclass Main\n{\n    public static void main (String[] args) throws java.lang.Exception\n    {\n        // Input the code here\n    }\n}`;\n\n// eslint-disable-next-line quotes\nconst pythonBoilerCode = `# Python code Here \\n\nprint('Hello world')`;\n\nconst javascriptBoilerCode = `// Javascript code Here \\n\nconsole.log('Hello world')`;\n\nconst BoilerplateReducer = (prevCode, { type }) => {\n  switch (type) {\n    case 'CPP':\n      return cppBoilerCode;\n    case 'PYTHON':\n      return pythonBoilerCode;\n    case 'JAVA':\n      return javaBoilerCode;\n    case 'JAVASCRIPT':\n      return javascriptBoilerCode;\n    default:\n      return cppBoilerCode;\n  }\n};\n\nexport default BoilerplateReducer;\n","import {\n  createContext, useContext, useReducer, useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport BoilerplateReducer from '../reducers/BoilerplateReducer';\n\nconst BoilerPlateContext = createContext();\n\nexport const BoilerplateProvider = ({ children }) => {\n  const [boilerplateCode, setBoilerplateCode] = useReducer(BoilerplateReducer, '');\n\n  useEffect(() => {\n    setBoilerplateCode({ type: 'CPP' });\n  }, []);\n\n  return (\n    /* eslint-disable */\n    <BoilerPlateContext.Provider\n      value={{ boilerplateCode, setBoilerplateCode }}\n    >\n      {children}\n    </BoilerPlateContext.Provider>\n    /* eslint-enable */\n  );\n};\n\nBoilerplateProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport const useBoilerplate = () => useContext(BoilerPlateContext);\n","const ThemeReducer = (prevTheme, { type, payload }) => {\n  switch (type) {\n    case 'TOGGLE_THEME':\n      if (payload) {\n        return payload.theme;\n      }\n      return prevTheme === 'light' ? 'dark' : 'light';\n\n    default:\n      return prevTheme;\n  }\n};\nexport default ThemeReducer;\n","import React, {\n  createContext, useContext, useEffect, useReducer,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport ThemeReducer from '../reducers/ThemeReducer';\n\nconst ThemeContext = createContext();\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useReducer(ThemeReducer, 'light');\n\n  useEffect(() => {\n    const currTheme = localStorage.getItem('theme');\n    if (currTheme) {\n      setTheme({ type: 'TOGGLE_THEME', payload: { theme: currTheme } });\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n  });\n\n  return (\n    /* eslint-disable */\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n    /* eslint-enable */\n  );\n};\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport const useTheme = () => useContext(ThemeContext);\n","/* eslint-disable no-console */\n/* eslint no-unused-vars: 0 */\nimport axios from 'axios';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Popup from 'reactjs-popup';\nimport PropTypes from 'prop-types';\nimport { Controlled as ControlledEditor } from 'react-codemirror2-react-17';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/eclipse.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/mode/clike/clike';\nimport 'codemirror/mode/python/python';\nimport 'codemirror/mode/javascript/javascript';\nimport { useTheme } from '../context/Providers/Themeprovider';\n\nconst LeftContainer = ({\n  pre, ext, updateOutput, updateLoading,\n}) => {\n  const [copied, setCopied] = useState(false);\n  const [code, setCode] = useState(pre);\n  const [input, setInput] = useState(null);\n  const [fileinput, setFileInput] = useState();\n  const [mode, setMode] = useState(ext);\n  const { theme } = useTheme();\n\n  useEffect(() => {\n    setTimeout(() => {\n      setCode(pre);\n    }, 0.5);\n  }, [pre]);\n\n  // set the language mode as per the file extension\n  const setLanguageMode = () => {\n    switch (ext) {\n      case 'cpp':\n        setMode('text/x-c++src');\n        break;\n      case 'java':\n        setMode('text/x-java');\n        break;\n      case 'py':\n        setMode('text/x-python');\n        break;\n      case 'js':\n        setMode('text/javascript');\n        break;\n      default:\n    }\n  };\n\n  useEffect(() => {\n    setLanguageMode();\n  }, [ext]);\n\n  const showFile = (e) => {\n    e.preventDefault();\n    const reader = new FileReader();\n    reader.onload = async (ev) => {\n      const text = ev.target.result;\n      setFileInput(text);\n    };\n    reader.readAsText(e.target.files[0]);\n  };\n\n  useEffect(() => {\n    setCode(fileinput);\n  }, [fileinput]);\n\n  const hiddenFileInput = useRef(null);\n\n  const handleClick = () => {\n    hiddenFileInput.current.click();\n  };\n  const downloadTxtFile = () => {\n    const element = document.createElement('a');\n    const file = new Blob([code], {\n      type: 'text/plain',\n    });\n    element.href = URL.createObjectURL(file);\n    const fileName = 'myCode.'.concat(ext);\n    element.download = fileName;\n    document.body.appendChild(element);\n    element.click();\n  };\n  const handleChange = (editor, data, value) => {\n    setCode(value);\n  };\n  const takeInput = (e) => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    // e.preventDefault();\n    updateLoading('true');\n    const data = {\n      language: ext,\n      code,\n      input,\n    };\n\n    axios\n      .post('https://editor-backend-v1.herokuapp.com/compile', data)\n      .then((res) => {\n        updateLoading('false');\n        if (res.data.result.output.search('error') !== -1) {\n          return updateOutput(res, 'error');\n        }\n        return updateOutput(res, 'response');\n      })\n      .catch((err) => updateOutput(err, 'error'));\n  };\n\n  return (\n    <div className=\"left__container\">\n      <div className=\"header__info\">\n        <div className=\"file__name\">\n          <span>\n            code.\n            {ext}\n          </span>\n        </div>\n        <div>\n          <button className=\"btn\" type=\"button\" onClick={handleClick}>\n            <img\n              title=\"Upload\"\n              src={`${process.env.PUBLIC_URL}/assets/upload.png`}\n              alt=\"Upload Code\"\n              width=\"16px\"\n            />\n          </button>\n          <input\n            type=\"file\"\n            onChange={showFile}\n            style={{ display: 'none' }}\n            ref={hiddenFileInput}\n          />\n          {/* Button for download & Submit */}\n          <button className=\"btn\" type=\"button\">\n            <img\n              title=\"Run\"\n              src={`${process.env.PUBLIC_URL}/assets/play.png`}\n              alt=\"Submit Code\"\n              onClick={handleSubmit}\n              width=\"18px\"\n            />\n          </button>\n        </div>\n      </div>\n      <div\n        className={`code__body ${\n          theme === 'light' ? 'code__body_light-mode' : ''\n        }`}\n      >\n        <div className=\"logger__head_left\">\n          <h3 className=\"logger__heading\">Editor</h3>\n          <div className=\"tooltipBoundary\">\n            <button className=\"btn\" type=\"button\">\n              <img\n                title=\"Download\"\n                src={`${process.env.PUBLIC_URL}/assets/download.png`}\n                alt=\"Submit Code\"\n                onClick={downloadTxtFile}\n              />\n            </button>\n            <Popup\n              trigger={(\n                <button\n                  type=\"button\"\n                  style={{ backgroundColor: 'blueviolet', border: 'none' }}\n                >\n                  <CopyToClipboard text={code} onCopy={() => setCopied(true)}>\n                    <img\n                      width=\"24px\"\n                      src={`${process.env.PUBLIC_URL}/assets/copy.png`}\n                      alt=\"Copy to ClipBoard\"\n                      title=\"Copy Code\"\n                    />\n                  </CopyToClipboard>\n                </button>\n              )}\n              position={['top center', 'bottom right', 'bottom left']}\n              closeOnDocumentClick\n              keepTooltipInside=\".tooltipBoundary\"\n            >\n              Copied!\n            </Popup>\n          </div>\n        </div>\n        <form>\n          {/* code editor component */}\n          <ControlledEditor\n            onBeforeChange={handleChange}\n            value={code}\n            className=\"code-mirror-wrapper\"\n            options={{\n              lineWrapping: true,\n              lint: true,\n              mode,\n              theme: theme === 'light' ? 'eclipse' : 'dracula',\n              lineNumbers: true,\n              extraKeys: {\n                'Ctrl-Space': (event) => {\n                  handleSubmit(event);\n                },\n              },\n            }}\n          />\n          {/* textarea for Input Data */}\n          <textarea\n            placeholder=\"Input the Data Here\"\n            spellCheck=\"false\"\n            onChange={takeInput}\n            className={`input__block ${\n              theme === 'light' ? 'input__block_light-mode' : ''\n            }`}\n            default={input}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\nLeftContainer.propTypes = {\n  pre: PropTypes.string.isRequired,\n  ext: PropTypes.string.isRequired,\n  updateOutput: PropTypes.func.isRequired,\n  updateLoading: PropTypes.func.isRequired,\n};\nexport default LeftContainer;\n","/* eslint no-unused-vars: 0 */\nimport React from 'react';\nimport Loader from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '../context/Providers/Themeprovider';\n\nconst RightContainer = ({\n  output, loading, updateOutput, error,\n}) => {\n  const { theme } = useTheme();\n\n  return (\n    <div className=\"right__container\">\n      <div className=\"header__info\">\n        <div className=\"file__name\">\n          <span>Output Terminal</span>\n        </div>\n        <div>\n          {output && (\n            <button\n              className=\"btn\"\n              type=\"button\"\n              onClick={() => updateOutput('Console Cleared', 'clear')}\n            >\n              <img\n                title=\"Clear Terminal\"\n                alt=\"Clear Terminal\"\n                src={`${process.env.PUBLIC_URL}/assets/clear-icon.png`}\n              />\n            </button>\n          )}\n        </div>\n      </div>\n      <div\n        className={`logger__head_right ${\n          theme === 'light' ? 'logger__head_right_light-mode' : ''\n        }`}\n      >\n        <div\n          className={`output ${theme === 'light' ? 'output_light-mode' : ''}`}\n        >\n          {output}\n        </div>\n        <Loader\n          className=\"loader\"\n          width=\"100\"\n          height=\"100\"\n          type=\"Rings\"\n          color=\"blueviolet\"\n          visible={loading}\n        />\n      </div>\n    </div>\n  );\n};\nRightContainer.propTypes = {\n  output: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  updateOutput: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n};\nexport default RightContainer;\n","import React, { useState } from 'react';\nimport './Main.css';\nimport PropTypes from 'prop-types';\nimport { useBoilerplate } from '../context/Providers/BoilerplateProvider';\n\nconst SelectBar = ({ changeLanguage }) => {\n  const [lang, setLang] = useState('cpp');\n  const { setBoilerplateCode } = useBoilerplate();\n\n  const handleClick = (e, value) => {\n    switch (value) {\n      case 'cpp':\n        e.target.setAttribute(\n          'src',\n          `${process.env.PUBLIC_URL}/assets/c-active.png`,\n        );\n        setLang('cpp');\n        break;\n      case 'java':\n        e.target.setAttribute(\n          'src',\n          `${process.env.PUBLIC_URL}/assets/java-active.png`,\n        );\n        setLang('java');\n        break;\n      case 'py':\n        e.target.setAttribute(\n          'src',\n          `${process.env.PUBLIC_URL}/assets/py-active.png`,\n        );\n        setLang('py');\n        break;\n      case 'js':\n        e.target.setAttribute(\n          'src',\n          `${process.env.PUBLIC_URL}/assets/js-active.png`,\n        );\n        setLang('js');\n        break;\n      default:\n    }\n    changeLanguage(value);\n  };\n  return (\n    <div className=\"select__bar\">\n      <img\n        src={\n          lang === 'cpp'\n            ? `${process.env.PUBLIC_URL}/assets/c-active.png`\n            : `${process.env.PUBLIC_URL}/assets/c-inactive.png`\n        }\n        alt=\"C++\"\n        width=\"60px\"\n        onClick={(e) => {\n          setBoilerplateCode({ type: 'CPP' });\n          handleClick(e, 'cpp');\n        }}\n      />\n      <img\n        src={\n          lang === 'java'\n            ? `${process.env.PUBLIC_URL}/assets/java-active.png`\n            : `${process.env.PUBLIC_URL}/assets/java-inactive.png`\n        }\n        alt=\"JS\"\n        width=\"60px\"\n        onClick={(e) => {\n          setBoilerplateCode({ type: 'JAVA' });\n          handleClick(e, 'java');\n        }}\n      />\n      <img\n        src={\n          lang === 'py'\n            ? `${process.env.PUBLIC_URL}/assets/py-active.png`\n            : `${process.env.PUBLIC_URL}/assets/py-inactive.png`\n        }\n        alt=\"Python\"\n        width=\"60px\"\n        onClick={(e) => {\n          setBoilerplateCode({ type: 'PYTHON' });\n          handleClick(e, 'py');\n        }}\n      />\n      <img\n        src={\n          lang === 'js'\n            ? `${process.env.PUBLIC_URL}/assets/js-active.png`\n            : `${process.env.PUBLIC_URL}/assets/js-inactive.png`\n        }\n        alt=\"Javascript\"\n        width=\"60px\"\n        onClick={(e) => {\n          setBoilerplateCode({ type: 'JAVASCRIPT' });\n          handleClick(e, 'js');\n        }}\n      />\n    </div>\n  );\n};\nSelectBar.propTypes = {\n  changeLanguage: PropTypes.func.isRequired,\n};\nexport default SelectBar;\n","import React, { useState } from 'react';\nimport { useBoilerplate } from '../context/Providers/BoilerplateProvider';\nimport { useTheme } from '../context/Providers/Themeprovider';\nimport LeftContainer from './LeftContainer';\nimport RightContainer from './RightContainer';\nimport SelectBar from './SelectBar';\nimport './Main.css';\n\nconst Main = () => {\n  const [output, setOutput] = useState('');\n  const [lang, setLang] = useState('cpp');\n  const [error, setError] = useState(false);\n  // const [intial, setIntial] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { theme } = useTheme();\n  const { boilerplateCode } = useBoilerplate();\n\n  const updateOutput = (res, type) => {\n    if (type === 'clear') {\n      setOutput('Console Cleared');\n    } else if (type === 'error') {\n      setError(true);\n      setOutput(res.data.result.output);\n    } else {\n      setOutput(res.data.result.output);\n    }\n  };\n\n  const updateError = (value) => {\n    setError(value);\n  };\n  const updateLoading = (status) => {\n    setLoading(status);\n  };\n  const changeLanguage = (value) => {\n    setLang(value);\n  };\n\n  return (\n    <div\n      className={`main__container ${\n        theme === 'light' ? 'main__container_light-mode' : ''\n      }`}\n    >\n      <SelectBar changeLanguage={changeLanguage} />\n      <div className=\"content__area\">\n        <LeftContainer\n          ext={lang}\n          pre={boilerplateCode}\n          updateOutput={updateOutput}\n          updateLoading={updateLoading}\n          updateError={updateError}\n          loading={loading}\n        />\n        <RightContainer\n          output={output}\n          loading={loading}\n          updateOutput={updateOutput}\n          error={error}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport './Popup.css';\n\nconst PopUpText = () => (\n  <Popup\n    trigger={(\n      <img\n        src={`${process.env.PUBLIC_URL}/assets/info.png`}\n        alt=\"Info\"\n        title=\"Info\"\n      />\n    )}\n    modal\n    nested\n  >\n    {(close) => (\n      <div className=\"modal\">\n        <div className=\"modal__header\">\n          <div className=\"header\"> Info Section </div>\n          <button className=\"close\" onClick={close} type=\"button\">\n            &times;\n          </button>\n        </div>\n        <div className=\"content\">\n          {' '}\n          <p>Welcome to Online Compiler</p>\n          <p>\n            As, if now the compiler has support for three languages\n            <b> Python</b>\n            <b>,C++</b>\n            and\n            <b>Java</b>\n          </p>\n          <p>\n            This is an\n            <b>open-source project</b>\n            and contributions are appreciated. If interested or you have any\n            suggestion click the\n            <b>GitHub</b>\n            icon at the bottom and raise an\n            <b>issue.</b>\n          </p>\n        </div>\n        <div className=\"actions\">\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => {\n              close();\n            }}\n          >\n            <a href=\"https://github.com/NegiAkash890/editor-backend\">\n              <img\n                src={`${process.env.PUBLIC_URL}/assets/github.png`}\n                title=\"Go to GitHub Repository\"\n                alt=\"GitHub Icon\"\n              />\n            </a>\n          </button>\n        </div>\n      </div>\n    )}\n  </Popup>\n);\n\nexport const BoundedTooltip = () => (\n  <div\n    style={{ height: 200, width: 400, border: '1px solid red' }}\n    className=\"tooltipBoundary\"\n  >\n    <Popup\n      trigger={(\n        <button type=\"button\" className=\"button\">\n          Trigger 1\n        </button>\n      )}\n      position=\"bottom right\"\n      closeOnDocumentClick\n      keepTooltipInside=\".tooltipBoundary\"\n    >\n      Code Copied\n    </Popup>\n  </div>\n);\nexport default PopUpText;\n","import React from 'react';\nimport { FiSun, FiMoon } from 'react-icons/fi';\nimport { useTheme } from '../../context/Providers/Themeprovider';\nimport togglerStyles from './Themetoggler.module.css';\n\nconst ThemeToggler = () => {\n  const { theme, setTheme } = useTheme();\n  return (\n    <button\n      type=\"button\"\n      className={`${togglerStyles['toggler-btn']}`}\n      onClick={() => setTheme({ type: 'TOGGLE_THEME' })}\n    >\n      {theme === 'dark' ? <FiSun size={20} /> : <FiMoon size={20} />}\n    </button>\n  );\n};\n\nexport default ThemeToggler;\n","/* eslint-disable */\nimport React from 'react';\nimport { useTheme } from '../context/Providers/Themeprovider';\nimport PopupText from './Popup';\nimport ThemeToggler from './ThemeToggler/ThemeToggler';\n\nconst NavBar = () => {\n  const { theme } = useTheme();\n  return (\n    <div className=\"top__nav dark__nav\" style={theme === 'dark' ? { backgroundColor: 'black', color: 'white' } : {}}>\n      <div className=\"logo__info\">\n        <img\n          src={`${process.env.PUBLIC_URL}/assets/main-logo.png`}\n          alt=\"site logo\"\n          width=\"50px\" style={theme === 'dark' ? { backgroundColor: 'white' } : {}}\n        />\n        <p id=\"logo__name\">Online Compiler</p>\n      </div>\n      <div className=\"info__section\">\n        <ThemeToggler />\n        <a href=\"https://github.com/NegiAkash890/editor-backend\">\n          <img\n            src={`${process.env.PUBLIC_URL}/assets/github.png`}\n            title=\"Go to GitHub Repository\"\n            alt=\"GitHub Icon\"\n          />\n        </a>\n        <PopupText />\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\nimport preload from './SplashScreen.module.css';\n\nconst Preloader = () => (\n  <div className={preload.preload}>\n    <img\n      className={preload.logo}\n      src={`${process.env.PUBLIC_URL}/assets/main-logo.png`}\n      alt=\"Loading ...\"\n      height=\"150rem\"\n    />\n    <br />\n    <PropagateLoader size=\"20px\" />\n  </div>\n);\n\nexport default Preloader;\n","import React, { useState, useEffect } from 'react';\nimport Footer from './components/Footer';\nimport Main from './components/Main';\nimport NavBar from './components/NavBar';\nimport './App.css';\nimport Preloader from './components/Splash Screen/SplashScreen';\n\nconst App = () => {\n  // Loading state\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n  }, []);\n\n  return isLoading ? (\n    // If page is still loading then splash screen\n    <Preloader />\n  ) : (\n    <div className=\"App\">\n      {/* Landing Navigation Bar */}\n      <NavBar />\n\n      {/* Main Container */}\n      <Main />\n\n      {/* Footer Container */}\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider } from './context/Providers/Themeprovider';\nimport { BoilerplateProvider } from './context/Providers/BoilerplateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <BoilerplateProvider>\n        <App />\n      </BoilerplateProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}