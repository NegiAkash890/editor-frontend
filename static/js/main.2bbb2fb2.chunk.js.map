{"version":3,"sources":["components/SplashScreen/index.module.css","components/ThemeToggler/index.module.css","components/Popup/index.module.css","components/Footer.js","context/reducers/BoilerplateReducer.js","context/Providers/BoilerplateProvider.js","context/reducers/ThemeReducer.js","context/Providers/Themeprovider.js","utils/downloadFile.js","utils/controlledEditorConfig.js","components/LeftContainer.js","components/RightContainer.js","components/SelectBar.js","components/Main.js","components/Popup/index.js","components/ThemeToggler/index.js","components/NavBar.js","components/SplashScreen/index.js","App.js","index.js"],"names":["module","exports","Footer","_jsx","className","cppBoilerCode","BoilerplateReducer","prevCode","_ref","type","BoilerPlateContext","createContext","BoilerplateProvider","children","boilerplateCode","setBoilerplateCode","useReducer","boilerplateContextValue","useMemo","useEffect","Provider","value","useBoilerplate","useContext","ThemeReducer","prevTheme","payload","theme","ThemeContext","ThemeProvider","themePreference","setThemePreference","themeContentValue","setTheme","currentActiveTheme","localStorage","getItem","setItem","useTheme","downloadFile","content","fileName","extension","arguments","length","undefined","element","document","createElement","file","Blob","href","URL","createObjectURL","downloadAs","concat","download","body","appendChild","click","themeConfig","light","dark","defaultConfig","mode","cb","lineWrapping","lint","lineNumbers","extraKeys","event","LeftContainer","pre","ext","updateOutput","updateLoading","_copied","setCopied","useState","code","setCode","defaultTextAreaInput","setInput","fileinput","setFileInput","setMode","hiddenFileInput","useRef","setTimeout","setLanguageMode","axios","get","then","_","console","log","catch","error","handleSubmit","e","preventDefault","data","language","input","post","res","result","stderr","stdout","err","config","_jsxs","onClick","handleClick","current","title","src","process","alt","width","onChange","reader","FileReader","onload","ev","text","target","readAsText","files","style","display","ref","downloadTxtFile","Popup","trigger","backgroundColor","border","CopyToClipboard","onCopy","position","closeOnDocumentClick","keepTooltipInside","ControlledEditor","onBeforeChange","handleControlledBeforeChangeCallBack","__","options","placeholder","spellCheck","default","RightContainer","output","loading","Loader","height","color","visible","SelectBar","changeLanguage","lang","setLang","setAttribute","Main","setOutput","setError","setLoading","status","updateError","PopUpText","modal","nested","close","styles","header","actions","button","ThemeIcon","FiSun","size","FiMoon","ThemeToggler","toggleTheme","NavBar","id","PopupText","Preloader","preload","logo","PropagateLoader","App","isLoading","setIsLoading","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2bbb2fb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preload\":\"SplashScreen_preload__3kenw\",\"logo\":\"SplashScreen_logo__VBPct\",\"preload_logo\":\"SplashScreen_preload_logo__28Etk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggler-btn\":\"ThemeToggler_toggler-btn__23v5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Popup_modal__339YA\",\"close\":\"Popup_close__BbVSI\",\"header\":\"Popup_header__3IsH8\",\"modal__header\":\"Popup_modal__header__qStJL\",\"button\":\"Popup_button__3KqxO\",\"github__icon\":\"Popup_github__icon__11Qfk\",\"popup-content\":\"Popup_popup-content__12HRy\"};","import React from 'react';\n\nconst Footer = () => <div className=\"footer\" />;\n\nexport default Footer;\n","const cppBoilerCode = `#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    //Input the code here\n    return 0;\n}`;\n\nconst javaBoilerCode = `import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n/* Name of the class has to be \"Main\" only if the class is public. */\nclass Main\n{\n    public static void main (String[] args) throws java.lang.Exception\n    {\n        // Input the code here\n    }\n}`;\n\n// eslint-disable-next-line quotes\nconst pythonBoilerCode = `# Python code Here \\n\nprint('Hello world')`;\n\nconst javascriptBoilerCode = `// Javascript code Here \\n\nconsole.log('Hello world')`;\n\nconst BoilerplateReducer = (prevCode, { type }) => {\n  switch (type) {\n    case 'CPP':\n      return cppBoilerCode;\n    case 'PYTHON':\n      return pythonBoilerCode;\n    case 'JAVA':\n      return javaBoilerCode;\n    case 'JAVASCRIPT':\n      return javascriptBoilerCode;\n    default:\n      return cppBoilerCode;\n  }\n};\n\nexport default BoilerplateReducer;\n","import {\n  React, createContext, useContext, useReducer, useEffect, useMemo,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport BoilerplateReducer from '../reducers/BoilerplateReducer';\n\nconst BoilerPlateContext = createContext();\n\nexport const BoilerplateProvider = ({ children }) => {\n  const [boilerplateCode, setBoilerplateCode] = useReducer(BoilerplateReducer, '');\n  const boilerplateContextValue = useMemo(() => ({\n    boilerplateCode, setBoilerplateCode,\n  }));\n\n  useEffect(() => {\n    setBoilerplateCode({ type: 'CPP' });\n  }, []);\n\n  return (\n    <BoilerPlateContext.Provider\n      value={boilerplateContextValue}\n    >\n      {children}\n    </BoilerPlateContext.Provider>\n  );\n};\n\nBoilerplateProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport const useBoilerplate = () => useContext(BoilerPlateContext);\n","const ThemeReducer = (prevTheme, { type, payload }) => {\n  switch (type) {\n    case 'TOGGLE_THEME':\n      if (payload) {\n        return payload.theme;\n      }\n      return prevTheme === 'light' ? 'dark' : 'light';\n\n    default:\n      return prevTheme;\n  }\n};\nexport default ThemeReducer;\n","import React, {\n  createContext, useContext, useEffect, useMemo, useReducer,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport ThemeReducer from '../reducers/ThemeReducer';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [themePreference, setThemePreference] = useReducer(ThemeReducer, 'light');\n  const themeContentValue = useMemo(() => ({\n    theme: themePreference, setTheme: setThemePreference,\n  }));\n\n  useEffect(() => {\n    const currentActiveTheme = localStorage.getItem('theme');\n    if (currentActiveTheme) {\n      setThemePreference({ type: 'TOGGLE_THEME', payload: { theme: currentActiveTheme } });\n    }\n  }, []);\n\n  useEffect(() => localStorage.setItem('theme', themePreference), [themePreference]);\n\n  return (\n    <ThemeContext.Provider value={themeContentValue}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport const useTheme = () => useContext(ThemeContext);\n","const downloadFile = (content, fileName, extension = 'txt') => {\n  const element = document.createElement('a');\n  const file = new Blob([content], {\n    type: 'text/plain',\n  });\n  element.href = URL.createObjectURL(file);\n  const downloadAs = `${fileName}.${extension}`;\n  element.download = downloadAs;\n  document.body.appendChild(element);\n  element.click();\n};\n\nexport default downloadFile;\n","const themeConfig = {\n  light: 'eclipse',\n  dark: 'dracula',\n};\n\nconst defaultConfig = (mode, themePreference, cb) => ({\n  lineWrapping: true,\n  lint: true,\n  mode,\n  theme: themeConfig[themePreference],\n  lineNumbers: true,\n  extraKeys: {\n    'Ctrl-Space': (event) => {\n      cb(event);\n    },\n  },\n});\n\nexport default defaultConfig;\n","/* eslint-disable no-console */\n/* eslint no-unused-vars: 0 */\nimport axios from 'axios';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Popup from 'reactjs-popup';\nimport PropTypes from 'prop-types';\nimport { Controlled as ControlledEditor } from 'react-codemirror2-react-17';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/eclipse.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/mode/clike/clike';\nimport 'codemirror/mode/python/python';\nimport 'codemirror/mode/javascript/javascript';\nimport { useTheme } from '../context/Providers/Themeprovider';\nimport downloadFile from '../utils/downloadFile';\nimport defaultConfig from '../utils/controlledEditorConfig';\n\nconst LeftContainer = ({\n  pre, ext, updateOutput, updateLoading,\n}) => {\n  const [_copied, setCopied] = useState(false);\n  const [code, setCode] = useState(pre);\n  const [defaultTextAreaInput, setInput] = useState(null);\n  const [fileinput, setFileInput] = useState();\n  const [mode, setMode] = useState(ext);\n  const hiddenFileInput = useRef(null);\n  const { theme } = useTheme();\n\n  useEffect(() => {\n    setTimeout(() => {\n      setCode(pre);\n    }, 0.5);\n  }, [pre]);\n\n  // set the language mode as per the file extension\n  const setLanguageMode = () => {\n    switch (ext) {\n      case 'cpp':\n        setMode('text/x-c++src');\n        break;\n      case 'java':\n        setMode('text/x-java');\n        break;\n      case 'py':\n        setMode('text/x-python');\n        break;\n      case 'js':\n        setMode('text/javascript');\n        break;\n      default:\n    }\n  };\n\n  useEffect(() => {\n    setLanguageMode();\n  }, [ext]);\n\n  useEffect(() => {\n    axios\n      .get('https://main--editor-backend-compile.netlify.app/.netlify/functions/api')\n      .then((_) => console.log('Ping'))\n      .catch((error) => console.error('Error:', error));\n  }, []);\n\n  const showFile = (e) => {\n    e.preventDefault();\n    const reader = new FileReader();\n    reader.onload = (ev) => {\n      const text = ev.target.result;\n      setFileInput(text);\n    };\n    reader.readAsText(e.target.files[0]);\n  };\n\n  useEffect(() => {\n    setCode(fileinput);\n  }, [fileinput]);\n\n  const handleClick = () => {\n    hiddenFileInput.current.click();\n  };\n\n  const downloadTxtFile = () => downloadFile(code, 'myCode', ext);\n\n  const handleControlledBeforeChangeCallBack = (_, __, value) => {\n    setCode(value);\n  };\n\n  const handleTextAreaChange = (e) => setInput(e.target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    updateLoading('true');\n    const data = {\n      language: ext,\n      code,\n      input: defaultTextAreaInput,\n    };\n\n    axios\n      .post('https://main--editor-backend-compile.netlify.app/.netlify/functions/api/compile', data)\n      .then((res) => {\n        updateLoading('false');\n        if (res.data.result.stderr) {\n          return updateOutput(res.data.result.stderr, 'error');\n        }\n        return updateOutput(res.data.result.stdout, 'response');\n      })\n      .catch((err) => {\n        updateOutput(err, 'error');\n      });\n  };\n\n  const config = defaultConfig(mode, theme, handleSubmit);\n  return (\n    <div className=\"left__container\">\n      <div className=\"header__info\">\n        <div className=\"file__name\">\n          <span>\n            code.\n            {ext}\n          </span>\n        </div>\n        <div>\n          <button className=\"btn\" type=\"button\" onClick={handleClick}>\n            <img\n              title=\"Upload Icon\"\n              src={`${process.env.PUBLIC_URL}/assets/upload.png`}\n              alt=\"Upload Code\"\n              width=\"16px\"\n            />\n          </button>\n          <input\n            type=\"file\"\n            onChange={showFile}\n            style={{ display: 'none' }}\n            ref={hiddenFileInput}\n          />\n          {/* Button for download & Submit */}\n          <button className=\"btn\" type=\"button\">\n            <img\n              title=\"Run\"\n              src={`${process.env.PUBLIC_URL}/assets/play.png`}\n              alt=\"Submit Code\"\n              onClick={handleSubmit}\n              width=\"18px\"\n            />\n          </button>\n        </div>\n      </div>\n      <div\n        className={`code__body ${theme === 'light' ? 'code__body_light-mode' : ''\n        }`}\n      >\n        <div className=\"logger__head_left\">\n          <h3 className=\"logger__heading\">Editor</h3>\n          <div className=\"tooltipBoundary\">\n            <button className=\"btn\" type=\"button\">\n              <img\n                title=\"Download\"\n                src={`${process.env.PUBLIC_URL}/assets/download.png`}\n                alt=\"Submit Code\"\n                onClick={downloadTxtFile}\n              />\n            </button>\n            <Popup\n              trigger={(\n                <button\n                  type=\"button\"\n                  style={{ backgroundColor: 'blueviolet', border: 'none' }}\n                >\n                  <CopyToClipboard text={code} onCopy={() => setCopied(true)}>\n                    <img\n                      width=\"24px\"\n                      src={`${process.env.PUBLIC_URL}/assets/copy.png`}\n                      alt=\"Copy to ClipBoard\"\n                      title=\"Copy Code\"\n                    />\n                  </CopyToClipboard>\n                </button>\n              )}\n              position={['top center', 'bottom right', 'bottom left']}\n              closeOnDocumentClick\n              keepTooltipInside=\".tooltipBoundary\"\n            >\n              Copied!\n            </Popup>\n          </div>\n        </div>\n        <form>\n          {/* code editor component */}\n          <ControlledEditor\n            onBeforeChange={handleControlledBeforeChangeCallBack}\n            value={code}\n            className=\"code-mirror-wrapper\"\n            options={config}\n          />\n          {/* textarea for Input Data */}\n          <textarea\n            placeholder=\"Input the Data Here\"\n            spellCheck=\"false\"\n            onChange={handleTextAreaChange}\n            className={`input__block ${theme === 'light' ? 'input__block_light-mode' : ''\n            }`}\n            default={defaultTextAreaInput}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\nLeftContainer.propTypes = {\n  pre: PropTypes.string.isRequired,\n  ext: PropTypes.string.isRequired,\n  updateOutput: PropTypes.func.isRequired,\n  updateLoading: PropTypes.func.isRequired,\n};\nexport default LeftContainer;\n","/* eslint no-unused-vars: 0 */\nimport React from 'react';\nimport Loader from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '../context/Providers/Themeprovider';\n\nconst RightContainer = ({\n  output, loading, updateOutput,\n}) => {\n  const { theme } = useTheme();\n\n  return (\n    <div className=\"right__container\">\n      <div className=\"header__info\">\n        <div className=\"file__name\">\n          <span>Output Terminal</span>\n        </div>\n        <div>\n          {output && (\n            <button\n              className=\"btn\"\n              type=\"button\"\n              onClick={() => updateOutput('Console Cleared', 'clear')}\n            >\n              <img\n                title=\"Clear Terminal\"\n                alt=\"Clear Terminal\"\n                src={`${process.env.PUBLIC_URL}/assets/clear-icon.png`}\n              />\n            </button>\n          )}\n        </div>\n      </div>\n      <div\n        className={`logger__head_right ${\n          theme === 'light' ? 'logger__head_right_light-mode' : ''\n        }`}\n      >\n        <div\n          className={`output ${theme === 'light' ? 'output_light-mode' : ''}`}\n        >\n          <pre>\n            {output}\n          </pre>\n        </div>\n        <Loader\n          className=\"loader\"\n          width=\"100\"\n          height=\"100\"\n          type=\"Rings\"\n          color=\"blueviolet\"\n          visible={loading}\n        />\n      </div>\n    </div>\n  );\n};\n\nRightContainer.propTypes = {\n  output: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  updateOutput: PropTypes.func.isRequired,\n};\n\nexport default RightContainer;\n","import React, { useState } from 'react';\nimport './Main.css';\nimport PropTypes from 'prop-types';\nimport { useBoilerplate } from '../context/Providers/BoilerplateProvider';\n\nconst SelectBar = ({ changeLanguage }) => {\n  const [lang, setLang] = useState('cpp');\n  const { setBoilerplateCode } = useBoilerplate();\n\n  const handleClick = (e, value) => {\n    switch (value) {\n      case 'cpp':\n        e.target.setAttribute(\n          'src',\n          `${process.env.PUBLIC_URL}/assets/c-active.png`,\n        );\n        setLang('cpp');\n        break;\n      case 'java':\n        e.target.setAttribute(\n          'src',\n          `${process.env.PUBLIC_URL}/assets/java-active.png`,\n        );\n        setLang('java');\n        break;\n      case 'py':\n        e.target.setAttribute(\n          'src',\n          `${process.env.PUBLIC_URL}/assets/py-active.png`,\n        );\n        setLang('py');\n        break;\n      case 'js':\n        e.target.setAttribute(\n          'src',\n          `${process.env.PUBLIC_URL}/assets/js-active.png`,\n        );\n        setLang('js');\n        break;\n      default:\n    }\n    changeLanguage(value);\n  };\n  return (\n    <div className=\"select__bar\">\n      <img\n        src={\n          lang === 'cpp'\n            ? `${process.env.PUBLIC_URL}/assets/c-active.png`\n            : `${process.env.PUBLIC_URL}/assets/c-inactive.png`\n        }\n        alt=\"C++\"\n        width=\"60px\"\n        onClick={(e) => {\n          setBoilerplateCode({ type: 'CPP' });\n          handleClick(e, 'cpp');\n        }}\n      />\n      <img\n        src={\n          lang === 'java'\n            ? `${process.env.PUBLIC_URL}/assets/java-active.png`\n            : `${process.env.PUBLIC_URL}/assets/java-inactive.png`\n        }\n        alt=\"JS\"\n        width=\"60px\"\n        onClick={(e) => {\n          setBoilerplateCode({ type: 'JAVA' });\n          handleClick(e, 'java');\n        }}\n      />\n      <img\n        src={\n          lang === 'py'\n            ? `${process.env.PUBLIC_URL}/assets/py-active.png`\n            : `${process.env.PUBLIC_URL}/assets/py-inactive.png`\n        }\n        alt=\"Python\"\n        width=\"60px\"\n        onClick={(e) => {\n          setBoilerplateCode({ type: 'PYTHON' });\n          handleClick(e, 'py');\n        }}\n      />\n      <img\n        src={\n          lang === 'js'\n            ? `${process.env.PUBLIC_URL}/assets/js-active.png`\n            : `${process.env.PUBLIC_URL}/assets/js-inactive.png`\n        }\n        alt=\"Javascript\"\n        width=\"60px\"\n        onClick={(e) => {\n          setBoilerplateCode({ type: 'JAVASCRIPT' });\n          handleClick(e, 'js');\n        }}\n      />\n    </div>\n  );\n};\nSelectBar.propTypes = {\n  changeLanguage: PropTypes.func.isRequired,\n};\nexport default SelectBar;\n","import React, { useState } from 'react';\nimport { useBoilerplate } from '../context/Providers/BoilerplateProvider';\nimport { useTheme } from '../context/Providers/Themeprovider';\nimport LeftContainer from './LeftContainer';\nimport RightContainer from './RightContainer';\nimport SelectBar from './SelectBar';\nimport './Main.css';\n\nconst Main = () => {\n  const [output, setOutput] = useState('');\n  const [lang, setLang] = useState('cpp');\n  const [error, setError] = useState(false);\n  // const [intial, setIntial] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { theme } = useTheme();\n  const { boilerplateCode } = useBoilerplate();\n\n  const updateOutput = (res, type) => {\n    if (type === 'clear') {\n      setOutput('Console Cleared');\n    } else if (type === 'error') {\n      setError(true);\n      setOutput(res);\n    } else {\n      setOutput(res);\n    }\n  };\n\n  const updateError = (value) => {\n    setError(value);\n  };\n  const updateLoading = (status) => {\n    setLoading(status);\n  };\n  const changeLanguage = (value) => {\n    setLang(value);\n  };\n\n  return (\n    <div\n      className={`main__container ${\n        theme === 'light' ? 'main__container_light-mode' : ''\n      }`}\n    >\n      <SelectBar changeLanguage={changeLanguage} />\n      <div className=\"content__area\">\n        <LeftContainer\n          ext={lang}\n          pre={boilerplateCode}\n          updateOutput={updateOutput}\n          updateLoading={updateLoading}\n          updateError={updateError}\n          loading={loading}\n        />\n        <RightContainer\n          output={output}\n          loading={loading}\n          updateOutput={updateOutput}\n          error={error}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport styles from './index.module.css';\n\nconst PopUpText = () => (\n  <Popup\n    trigger={(\n      <img\n        src={`${process.env.PUBLIC_URL}/assets/info.png`}\n        alt=\"Info\"\n        title=\"Info\"\n      />\n    )}\n    modal\n    nested\n  >\n    {(close) => (\n      <div className={styles.modal}>\n        <div className=\"modal__header\">\n          <div className={styles.header}> Info Section </div>\n          <button className={styles.close} onClick={close} type=\"button\">\n            &times;\n          </button>\n        </div>\n        <div className={styles.content}>\n          {' '}\n          <p>Welcome to Online Compiler</p>\n          <p>\n            As, if now the compiler has support for three languages\n            <b> Python</b>\n            <b>,C++</b>\n            and\n            <b>Java</b>\n          </p>\n          <p>\n            This is an\n            <b>open-source project</b>\n            and contributions are appreciated. If interested or you have any\n            suggestion click the\n            <b>GitHub</b>\n            icon at the bottom and raise an\n            <b>issue.</b>\n          </p>\n        </div>\n        <div className={styles.actions}>\n          <button\n            type=\"button\"\n            className={styles.button}\n            onClick={close}\n          >\n            <a href=\"https://github.com/NegiAkash890/editor-backend\">\n              <img\n                src={`${process.env.PUBLIC_URL}/assets/github.png`}\n                title=\"Go to GitHub Repository\"\n                alt=\"GitHub Icon\"\n              />\n            </a>\n          </button>\n        </div>\n      </div>\n    )}\n  </Popup>\n);\n\nexport const BoundedTooltip = () => (\n  <div\n    style={{ height: 200, width: 400, border: '1px solid red' }}\n    className={styles.tooltipBoundary}\n  >\n    <Popup\n      trigger={(\n        <button type=\"button\" className={styles.button}>\n          Trigger 1\n        </button>\n      )}\n      position=\"bottom right\"\n      closeOnDocumentClick\n      keepTooltipInside=\".tooltipBoundary\"\n    >\n      Code Copied\n    </Popup>\n  </div>\n);\nexport default PopUpText;\n","import React from 'react';\nimport { FiSun, FiMoon } from 'react-icons/fi';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '../../context/Providers/Themeprovider';\nimport styles from './index.module.css';\n\nconst ThemeIcon = ({ theme }) => (theme === 'dark' ? <FiSun size={20} /> : <FiMoon size={20} />);\n\nconst ThemeToggler = () => {\n  const { theme, setTheme } = useTheme();\n  const toggleTheme = () => setTheme({ type: 'TOGGLE_THEME' });\n  return (\n    <button\n      type=\"button\"\n      className={styles['toggler-btn']}\n      onClick={toggleTheme}\n    >\n      <ThemeIcon theme={theme} />\n    </button>\n  );\n};\n\nThemeIcon.propTypes = {\n  theme: PropTypes.string.isRequired,\n};\nexport default ThemeToggler;\n","/* eslint-disable */\nimport React from 'react';\nimport { useTheme } from '../context/Providers/Themeprovider';\nimport PopupText from './Popup/index';\nimport ThemeToggler from './ThemeToggler/index';\n\nconst NavBar = () => {\n  const { theme } = useTheme();\n  return (\n    <div className=\"top__nav dark__nav\" style={theme === 'dark' ? { backgroundColor: 'black', color: 'white' } : {}}>\n      <div className=\"logo__info\">\n        <img\n          src={`${process.env.PUBLIC_URL}/assets/main-logo.png`}\n          alt=\"site logo\"\n          width=\"50px\" style={theme === 'dark' ? { backgroundColor: 'white' } : {}}\n        />\n        <p id=\"logo__name\">Online Compiler</p>\n      </div>\n      <div className=\"info__section\">\n        <ThemeToggler />\n        <a href=\"https://github.com/NegiAkash890/editor-backend\">\n          <img\n            src={`${process.env.PUBLIC_URL}/assets/github.png`}\n            title=\"Go to GitHub Repository\"\n            alt=\"GitHub Icon\"\n          />\n        </a>\n        <PopupText />\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\nimport styles from './index.module.css';\n\nconst Preloader = () => (\n  <div className={styles.preload}>\n    <img\n      className={styles.logo}\n      src={`${process.env.PUBLIC_URL}/assets/main-logo.png`}\n      alt=\"Loading ...\"\n      height=\"150rem\"\n    />\n    <br />\n    <PropagateLoader size=\"20px\" />\n  </div>\n);\n\nexport default Preloader;\n","import React, { useState, useEffect } from 'react';\nimport Footer from './components/Footer';\nimport Main from './components/Main';\nimport NavBar from './components/NavBar';\nimport './App.css';\nimport Preloader from './components/SplashScreen';\n\nconst App = () => {\n  // Loading state\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n  }, []);\n\n  return isLoading ? (\n    // If page is still loading then splash screen\n    <Preloader />\n  ) : (\n    <div className=\"App\">\n      {/* Landing Navigation Bar */}\n      <NavBar />\n\n      {/* Main Container */}\n      <Main />\n\n      {/* Footer Container */}\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider } from './context/Providers/Themeprovider';\nimport { BoilerplateProvider } from './context/Providers/BoilerplateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <BoilerplateProvider>\n        <App />\n      </BoilerplateProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}